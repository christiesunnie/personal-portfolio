// Credit this animation to https://codepen.io/brandonmcconnell/pen/bZqGdw
$strings: (
    "Front End Web Developer" "Motorcycle Biker 🏍" "Nice to meet you 😀"
);

// now for some timing (in seconds)
$timeCharType: 0.1; // character typed
$timeChangeStr: 1.5; // time between typed/delete
$timeCharDel: 0.05; // character deleted
$timeChangeSent: 0.8; // time between strings

// initializing some variables and functions ✊🏼
$charCount: 0;
$durTotal: 0;
@each $string in $strings {
    $charCount: $charCount + str-length($string);
    $durTotal: $durTotal +
        (str-length($string) * ($timeCharType + $timeCharDel)) +
        $timeChangeStr +
        $timeChangeSent;
}
@function percent($string, $letter, $modifier) {
    $stringsPast: $string - 1;
    $time: 0;
    @while $stringsPast > 0 {
        $time: $time +
            (
                ($timeCharType + $timeCharDel) *
                    (str-length(nth($strings, $stringsPast)))
            ) +
            $timeChangeStr +
            $timeChangeSent;
        $stringsPast: $stringsPast - 1;
    }
    @if $letter <= str-length(nth($strings, $string)) {
        $time: $time + ($timeCharType * ($letter - 1));
    } @else {
        $time: $time +
            ($timeCharType * str-length(nth($strings, $string))) +
            $timeChangeStr +
            ($timeCharDel * ($letter - str-length(nth($strings, $string))));
    }
    @return ($time / $durTotal * 100 + $modifier) + "%";
}
$currentPercentage: 0;
// now THIS is where the magic happens... ✨
@keyframes typed {
    @for $i from 1 through length($strings) {
        @for $j from 1 through (str-length(nth($strings, $i)) * 2) {
            @if $j < str-length(nth($strings, $i)) * 2 {
                #{percent($i, $j, 0)},
                #{percent($i, $j+1, -0.001)} {
                    @if $j <= str-length(nth($strings, $i)) {
                        content: quote(#{str_slice(nth($strings, $i), 1, $j)});
                    } @else {
                        content: quote(
                            #{str_slice(
                                    nth($strings, $i),
                                    1,
                                    str-length(nth($strings, $i)) -
                                        ($j - str-length(nth($strings, $i)))
                                )}
                        );
                    }
                }
            } @else {
                @if $i < length($strings) {
                    #{percent($i, $j, 0)},
                    #{percent($i+1, 1, -0.001)} {
                        content: "​";
                    }
                } @else {
                    // last string
                    #{percent($i, $j, 0)},
                    100% {
                        content: "​";
                    }
                }
            }
        }
    }
}
@keyframes beam-blink {
    75% {
        border-color: transparent;
    }
}

.home {
    height: 100vh;
    padding-top: 25vh;
    background: linear-gradient(to bottom, rgba($primary-color, 0.45)),
        url(https://1.bp.blogspot.com/-51dL74QTW0s/Ucx5qyYlBAI/AAAAAAAAWgk/IT7vwn51zHU/s1280/Sunflowers+Desktop+Wallpapers+%25282%2529.jpg)
            center top;
    background-size: cover;
    text-align: center;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;

    &::after {
        content: "​";
        position: relative;
        top: -60px;
        display: inline-block;
        padding-right: 3px;
        padding-right: calc(3px + 0.1vw);
        border-right: 10px solid rgba(#3f3, 0.75);
        border-right: calc(1.1vw + 4px) solid rgba(#3f3, 0.75);
        white-space: nowrap;
        font-weight: 700;
        font-size: 1.1rem;
        animation: typed #{$durTotal + "s"} linear 1s infinite,
            beam-blink 1s infinite;
    }

    &-name {
        padding: 5px 0 20px 0;
        text-decoration: underline;
        font-size: 2rem;
    }

    &-name--first {
        color: lighten($secondary-color, 25%);
    }

    h2 {
        text-transform: capitalize;
        font-size: 1rem;
    }
}

.button-link {
    position: relative;
    top: 40vh;
}

.button-down {
    cursor: pointer;
    animation: bounce 1s infinite;
}

.button-down:hover,
.button-down:focus {
    color: #000;
}

@keyframes bounce {
    0% {
        transform: scale(1);
    }

    50% {
        transform: scale(0.8);
    }

    100% {
        transform: scale(1);
    }
}
